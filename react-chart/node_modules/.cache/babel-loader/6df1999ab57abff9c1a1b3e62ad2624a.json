{"ast":null,"code":"import _toConsumableArray from \"/home/callezenwaka/project/graphs/react-chart1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/callezenwaka/project/graphs/react-chart1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/callezenwaka/project/graphs/react-chart1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport pointRadial from \"../pointRadial.js\";\nvar Bump = /*#__PURE__*/function () {\n  function Bump(context, x) {\n    _classCallCheck(this, Bump);\n    this._context = context;\n    this._x = x;\n  }\n  _createClass(Bump, [{\n    key: \"areaStart\",\n    value: function areaStart() {\n      this._line = 0;\n    }\n  }, {\n    key: \"areaEnd\",\n    value: function areaEnd() {\n      this._line = NaN;\n    }\n  }, {\n    key: \"lineStart\",\n    value: function lineStart() {\n      this._point = 0;\n    }\n  }, {\n    key: \"lineEnd\",\n    value: function lineEnd() {\n      if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n      this._line = 1 - this._line;\n    }\n  }, {\n    key: \"point\",\n    value: function point(x, y) {\n      x = +x, y = +y;\n      switch (this._point) {\n        case 0:\n          {\n            this._point = 1;\n            if (this._line) this._context.lineTo(x, y);else this._context.moveTo(x, y);\n            break;\n          }\n        case 1:\n          this._point = 2;\n        // falls through\n        default:\n          {\n            if (this._x) this._context.bezierCurveTo(this._x0 = (this._x0 + x) / 2, this._y0, this._x0, y, x, y);else this._context.bezierCurveTo(this._x0, this._y0 = (this._y0 + y) / 2, x, this._y0, x, y);\n            break;\n          }\n      }\n      this._x0 = x, this._y0 = y;\n    }\n  }]);\n  return Bump;\n}();\nvar BumpRadial = /*#__PURE__*/function () {\n  function BumpRadial(context) {\n    _classCallCheck(this, BumpRadial);\n    this._context = context;\n  }\n  _createClass(BumpRadial, [{\n    key: \"lineStart\",\n    value: function lineStart() {\n      this._point = 0;\n    }\n  }, {\n    key: \"lineEnd\",\n    value: function lineEnd() {}\n  }, {\n    key: \"point\",\n    value: function point(x, y) {\n      x = +x, y = +y;\n      if (this._point === 0) {\n        this._point = 1;\n      } else {\n        var _this$_context, _this$_context2;\n        var p0 = pointRadial(this._x0, this._y0);\n        var p1 = pointRadial(this._x0, this._y0 = (this._y0 + y) / 2);\n        var p2 = pointRadial(x, this._y0);\n        var p3 = pointRadial(x, y);\n        (_this$_context = this._context).moveTo.apply(_this$_context, _toConsumableArray(p0));\n        (_this$_context2 = this._context).bezierCurveTo.apply(_this$_context2, _toConsumableArray(p1).concat(_toConsumableArray(p2), _toConsumableArray(p3)));\n      }\n      this._x0 = x, this._y0 = y;\n    }\n  }]);\n  return BumpRadial;\n}();\nexport function bumpX(context) {\n  return new Bump(context, true);\n}\nexport function bumpY(context) {\n  return new Bump(context, false);\n}\nexport function bumpRadial(context) {\n  return new BumpRadial(context);\n}","map":null,"metadata":{},"sourceType":"module"}
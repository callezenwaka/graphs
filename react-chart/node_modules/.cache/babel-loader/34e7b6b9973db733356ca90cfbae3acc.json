{"ast":null,"code":"import _slicedToArray from \"/home/callezenwaka/project/graphs/react-chart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/home/callezenwaka/project/graphs/react-chart/src/components/LineChart/LineChart.tsx\";\nimport React from 'react';\nimport { useEffect, useRef, useState } from \"react\";\nimport * as d3 from 'd3';\nimport './LineChart.css';\nvar LineChart = function LineChart(_ref) {\n  var items = _ref.items;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    width = _useState2[0],\n    setWidth = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    height = _useState4[0],\n    setHeight = _useState4[1]; // const margin = { top: 10, right: 10, bottom: 10, left: 10 };\n  var lineChart = useRef(null);\n  useEffect(function () {\n    var margin = {\n      top: 30,\n      right: 30,\n      bottom: 30,\n      left: 30\n    };\n    setWidth(360);\n    setHeight(360);\n\n    // drawLineHandler();\n\n    // remove g element tags\n    remove();\n\n    // set svg component\n    var svg = d3.select(lineChart.current).attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', \"translate(\".concat(margin.left, \", \").concat(margin.top, \")\"));\n\n    // x axis scale\n    var xScale = d3.scaleBand().domain(d3.range(items.length)).range([margin.left, width + margin.right]).padding(1);\n    svg.append('g').attr('transform', 'translate(0,' + height + ')').call(d3.axisBottom(xScale).tickFormat(function (d, i) {\n      return items[i].label;\n    }).tickSizeOuter(0));\n    var max = d3.max(items, function (d) {\n      return d.value;\n    });\n\n    // y axis scale\n    var yScale = d3.scaleLinear().domain([0, max]).range([height, margin.top]);\n    svg.append('g').attr('transform', \"translate(\".concat(margin.left, \", 0)\")).call(d3.axisLeft(yScale));\n\n    // Draw line\n    svg.append('path').datum(items).attr('fill', 'none').attr('stroke', 'black').attr('stroke-width', 1.5).attr('d', d3.line().x(function (d, i) {\n      return xScale(i);\n    }).y(function (d) {\n      return yScale(d.value);\n    })\n    // .curve(d3.curveCardinal)\n    );\n\n    // Add title \n    // svg.append('text')\n    //   .attr('x', (width / 2))\n    //   .attr('y', (margin.top / 5 - 10))\n    //   .attr('text-anchor', 'middle')\n    //   .attr('font-size', '16px')\n    //   .attr('fill', 'black')\n    //   .text('Test data');\n  }, [items, width, height]);\n  var remove = function remove() {\n    var g = d3.select(lineChart.current).selectAll('g');\n\n    // check the number of existing elements, if greater than 0; remove all existing ones\n    if (g.size()) {\n      g.remove().exit();\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"line\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"line--section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"lineContainer\",\n    className: \"line--container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"line--title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Line Chart\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"line--content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    ref: lineChart,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  })))));\n};\nexport default LineChart;","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","LineChart","items","width","setWidth","height","setHeight","lineChart","margin","top","right","bottom","left","remove","svg","select","current","attr","append","xScale","scaleBand","domain","range","length","padding","call","axisBottom","tickFormat","d","i","label","tickSizeOuter","max","value","yScale","scaleLinear","axisLeft","datum","line","x","y","g","selectAll","size","exit"],"sources":["/home/callezenwaka/project/graphs/react-chart/src/components/LineChart/LineChart.tsx"],"sourcesContent":["import React from 'react';\nimport { useEffect, useRef, useState } from \"react\";\nimport { ChartType } from \"../../types/index\";\nimport * as d3 from 'd3';\nimport './LineChart.css';\n\nconst LineChart = ({ items }: { items: ChartType[] }) => {\n  const [width, setWidth] = useState(0);\n  const [height, setHeight] = useState(0);\n  // const margin = { top: 10, right: 10, bottom: 10, left: 10 };\n  const lineChart = useRef<SVGSVGElement>(null);\n\n  useEffect(() => {\n    const margin = { top: 30, right: 30, bottom: 30, left: 30 }\n    setWidth(360);\n    setHeight(360);\n\n    // drawLineHandler();\n\n    // remove g element tags\n    remove();\n\n    // set svg component\n    const svg = d3.select(lineChart.current)\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom)\n      .append('g')\n      .attr('transform', `translate(${margin.left}, ${margin.top})`);\n\n    // x axis scale\n    const xScale = d3.scaleBand()\n      .domain(d3.range(items.length) as unknown as string[])\n      .range([margin.left, width + margin.right])\n      .padding(1);\n\n    svg.append('g')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(d3.axisBottom(xScale).tickFormat((d, i) => items[i].label).tickSizeOuter(0))\n\n    const max = d3.max(items, (d) => d.value);\n\n    // y axis scale\n    const yScale = d3.scaleLinear()\n      .domain([0, max] as number[])\n      .range([height, margin.top]);\n\n    svg.append('g')\n      .attr('transform', `translate(${margin.left}, 0)`)\n      .call(d3.axisLeft(yScale));\n\n    // Draw line\n    svg.append('path')\n      .datum(items)\n      .attr('fill', 'none')\n      .attr('stroke', 'black')\n      .attr('stroke-width', 1.5)\n      .attr('d', d3.line<ChartType>()\n        .x((d, i) => xScale(i as unknown as string) as number)\n        .y((d) => yScale(d.value))\n        // .curve(d3.curveCardinal)\n      );\n\n    // Add title \n    // svg.append('text')\n    //   .attr('x', (width / 2))\n    //   .attr('y', (margin.top / 5 - 10))\n    //   .attr('text-anchor', 'middle')\n    //   .attr('font-size', '16px')\n    //   .attr('fill', 'black')\n    //   .text('Test data');\n\n  }, [items, width, height]);\n\n  const remove = () => {\n    const g = d3.select(lineChart.current).selectAll('g');\n\n    // check the number of existing elements, if greater than 0; remove all existing ones\n    if (g.size()) {\n      g.remove().exit();\n    }\n  };\n\n  return (\n    <div className=\"line\">\n      <section className=\"line--section\">\n        <div id=\"lineContainer\" className=\"line--container\">\n          <h1 className=\"line--title\">Line Chart</h1>\n          <div className=\"line--content\">\n            <svg ref={lineChart}></svg>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default LineChart;"],"mappings":"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"},"metadata":{},"sourceType":"module"}